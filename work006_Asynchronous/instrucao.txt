
weatherstack.com

http://api.weatherstack.com/

http://api.weatherstack.com/current?access_key=senha&query=37.8267,-122.4233

https://www.npmjs.com/package/request
npm i request
         https://www.npmjs.com/package/request#requestoptions-callback


https://www.npmjs.com/package/postman-request


npm i request@2.88

extensao json formatter

https://www.mapbox.com/
https://docs.mapbox.com/api/
https://docs.mapbox.com/api/search/
https://docs.mapbox.com/api/search/#forward-geocoding
https://docs.mapbox.com/api/search/#example-request-forward-geocoding
              "https://api.mapbox.com/geocoding/v5/mapbox.places/Los%20Angeles.json?access_token=pk.eyJ1IjoiaGVyb25uZXMiLCJhIjoiY2tib2VjbHA0MHFlZjJ5bzZrcHJlN2g3ZSJ9.nFfsqkrzJ9HmMTyB-QMucw"
              "https://api.mapbox.com/geocoding/v5/mapbox.places/Los%20Angeles.json?access_token=pk.eyJ1IjoiaGVyb25uZXMiLCJhIjoiY2tib2VjbHA0MHFlZjJ5bzZrcHJlN2g3ZSJ9.nFfsqkrzJ9HmMTyB-QMucw&limit=1"


-------------------------------------
*** Error: getaddrinfo ENOTFOUND xapi.weatherstack.com
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26) {
  errno: -3008,
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'xapi.weatherstack.com'
}
-------------------------------------

http://api.weatherstack.com/current?access_key=b8f519c2ac25ebbef2903c4bde501052&query=        'bagunÃ§ado'


links.mead.io/callback

//
// Goal: Mess around with the callback pattern
//
// 1. Define an add function that accepts the correct arguments
// 2. Use setTimeout to simulate a 2 second delay
// 3. After 2 seconds are up, call the callback function with the sum
// 4. Test your work!

add(1, 4, (sum) => {
    console.log(sum) // Should print: 5
})


links.mead.io/forecast

//
// Goal: Create a reusable function for getting the forecast
//
// 1. Setup the "forecast" function in utils/forecast.js
// 2. Require the function in app.js and call it as shown below
// 3. The forecast function should have three potential calls to callback:
//    - Low level error, pass string for error
//    - Coordinate error, pass string for error
//    - Success, pass forecast string for data (same format as from before)

forecast(-75.7088, 44.1545, (error, data) => {
  console.log('Error', error)
  console.log('Data', data)
})




